name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Unit & Integration Tests
        run: npm test

      - name: Start overlay services
        run: |
          # Start overlay network for testing
          nohup npx tsx src/mock/overlay-mock-extended.ts > overlay.log 2>&1 &
          sleep 5
        env:
          NODE_ENV: test
          OVERLAY_ENABLED: true

      - name: Newman legacy tests
        run: |
          mkdir -p test-results
          npm run newman
        env:
          NODE_ENV: test

      - name: Newman overlay API tests
        run: |
          # Test comprehensive BSV Overlay Network API
          npx newman run postman/BSV-Overlay-Network-API.postman_collection.json \
            -e postman/BSV-Overlay-Network.postman_environment.json \
            --reporters cli,junit,htmlextra \
            --reporter-junit-export test-results/newman-overlay.xml \
            --reporter-htmlextra-export test-results/newman-overlay-report.html \
            --delay-request 250 \
            --timeout-request 30000 \
            --bail
        env:
          NODE_ENV: test

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            test-results/**
            postman/**
            coverage/**
          if-no-files-found: ignore

  docker-build:
    if: github.ref == 'refs/heads/main'
    needs: build-test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gitdata-overlay:${{ github.sha }}
          platforms: linux/amd64
