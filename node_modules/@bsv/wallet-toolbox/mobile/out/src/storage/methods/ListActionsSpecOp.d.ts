import { TransactionStatus } from '../../sdk/types';
import { ValidListActionsArgs } from '../../sdk/validationHelpers';
import { AuthId } from '../../sdk/WalletStorage.interfaces';
import { TableTransaction } from '../schema/tables/TableTransaction';
import { StorageProvider } from '../StorageProvider';
export interface ListActionsSpecOp {
    name: string;
    /**
     * undefined to intercept no labels from vargs,
     * empty array to intercept all labels,
     * or an explicit array of labels to intercept.
     */
    labelsToIntercept?: string[];
    setStatusFilter?: () => TransactionStatus[];
    postProcess?: (s: StorageProvider, auth: AuthId, vargs: ValidListActionsArgs, specOpLabels: string[], txs: Partial<TableTransaction>[]) => Promise<void>;
}
export declare const getLabelToSpecOp: () => Record<string, ListActionsSpecOp>;
//# sourceMappingURL=ListActionsSpecOp.d.ts.map