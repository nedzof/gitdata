"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLabelToSpecOp = void 0;
const types_1 = require("../../sdk/types");
const getLabelToSpecOp = () => {
    return {
        [types_1.specOpNoSendActions]: {
            name: 'noSendActions',
            labelsToIntercept: ['abort'],
            setStatusFilter: () => ['nosend'],
            postProcess: async (s, auth, vargs, specOpLabels, txs) => {
                if (specOpLabels.indexOf('abort') >= 0) {
                    for (const tx of txs) {
                        if (tx.status === 'nosend') {
                            await s.abortAction(auth, { reference: tx.reference });
                            tx.status = 'failed';
                        }
                    }
                }
            }
        },
        [types_1.specOpFailedActions]: {
            name: 'failedActions',
            labelsToIntercept: ['unfail'],
            setStatusFilter: () => ['failed'],
            postProcess: async (s, auth, vargs, specOpLabels, txs) => {
                if (specOpLabels.indexOf('unfail') >= 0) {
                    for (const tx of txs) {
                        if (tx.status === 'failed') {
                            await s.updateTransaction(tx.transactionId, { status: 'unfail' });
                            // wallet wire does not support 'unfail' status, return as 'failed'.
                        }
                    }
                }
            }
        }
    };
};
exports.getLabelToSpecOp = getLabelToSpecOp;
//# sourceMappingURL=ListActionsSpecOp.js.map