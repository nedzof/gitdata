import { BulkFileDataManager } from './BulkFileDataManager';
import { HeightRange } from './HeightRange';
export declare class BulkFileDataReader {
    readonly manager: BulkFileDataManager;
    readonly range: HeightRange;
    readonly maxBufferSize: number;
    nextHeight: number;
    constructor(manager: BulkFileDataManager, range: HeightRange, maxBufferSize: number);
    /**
     * Returns the Buffer of block headers from the given `file` for the given `range`.
     * If `range` is undefined, the file's full height range is read.
     * The returned Buffer will only contain headers in `file` and in `range`
     * @param file
     * @param range
     */
    private readBufferFromFile;
    /**
     * @returns an array containing the next `maxBufferSize` bytes of headers from the files.
     */
    read(): Promise<Uint8Array | undefined>;
}
//# sourceMappingURL=BulkFileDataReader.d.ts.map