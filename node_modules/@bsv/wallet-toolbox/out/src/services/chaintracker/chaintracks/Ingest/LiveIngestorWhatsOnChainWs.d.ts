import { BlockHeader, Chain } from '../../../../sdk';
import { LiveIngestorBase } from './LiveIngestorBase';
import { LiveIngestorWhatsOnChainOptions } from './LiveIngestorWhatsOnChainPoll';
import { StopListenerToken } from './WhatsOnChainIngestorWs';
import { WhatsOnChainServices } from './WhatsOnChainServices';
export declare class LiveIngestorWhatsOnChainWs extends LiveIngestorBase {
    static createLiveIngestorWhatsOnChainOptions(chain: Chain): LiveIngestorWhatsOnChainOptions;
    idleWait: number;
    woc: WhatsOnChainServices;
    stopNewListenersToken: StopListenerToken;
    constructor(options: LiveIngestorWhatsOnChainOptions);
    getHeaderByHash(hash: string): Promise<BlockHeader | undefined>;
    startListening(liveHeaders: BlockHeader[]): Promise<void>;
    stopListening(): void;
}
//# sourceMappingURL=LiveIngestorWhatsOnChainWs.d.ts.map