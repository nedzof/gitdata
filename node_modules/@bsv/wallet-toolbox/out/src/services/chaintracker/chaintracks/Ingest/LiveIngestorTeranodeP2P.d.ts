import { BlockHeader, Chain } from '../../../../sdk';
import { LiveIngestorBase, LiveIngestorBaseOptions } from './LiveIngestorBase';
export interface LiveIngestorTeranodeP2POptions extends LiveIngestorBaseOptions {
    /**
     *
     */
    apiKey?: string;
    /**
     * User-Agent header value for requests
     */
    userAgent?: string;
}
export declare class LiveIngestorTeranodeP2P extends LiveIngestorBase {
    static createLiveIngestorTeranodeP2POptions(chain: Chain): LiveIngestorTeranodeP2POptions;
    constructor(options: LiveIngestorTeranodeP2POptions);
    getHeaderByHash(hash: string): Promise<BlockHeader | undefined>;
    startListening(liveHeaders: BlockHeader[]): Promise<void>;
    stopListening(): void;
}
//# sourceMappingURL=LiveIngestorTeranodeP2P.d.ts.map