import { Chaintracks } from './Chaintracks';
import { IncomingMessage, Server, ServerResponse } from 'http';
import { Chain } from '../../../sdk/types';
import { Services } from '../../Services';
export interface ChaintracksServiceOptions {
    chain: Chain;
    /**
     * prepended to the path of each registered service endpoint
     */
    routingPrefix: string;
    /**
     * Defaults to default configured Chaintracks instance with NoDb storage.
     */
    chaintracks?: Chaintracks;
    services?: Services;
    port?: number;
}
export declare class ChaintracksService {
    static createChaintracksServiceOptions(chain: Chain): ChaintracksServiceOptions;
    chain: Chain;
    options: ChaintracksServiceOptions;
    port?: number;
    chaintracks: Chaintracks;
    services: Services;
    server?: Server<typeof IncomingMessage, typeof ServerResponse>;
    constructor(options: ChaintracksServiceOptions);
    stopJsonRpcServer(): Promise<void>;
    startJsonRpcServer(port?: number): Promise<void>;
}
//# sourceMappingURL=ChaintracksService.d.ts.map