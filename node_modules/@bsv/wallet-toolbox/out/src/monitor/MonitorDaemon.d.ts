import { Knex } from 'knex';
import { Chain } from '../sdk/types';
import { StorageKnexOptions } from '../storage/StorageKnex';
import { StorageProvider } from '../storage/StorageProvider';
import { WalletStorageManager } from '../storage/WalletStorageManager';
import { WalletServicesOptions } from '../sdk/WalletServices.interfaces';
import { Services } from '../services/Services';
import { Monitor } from './Monitor';
export interface MonitorDaemonSetup {
    chain?: Chain;
    sqliteFilename?: string;
    mySQLConnection?: string;
    knexConfig?: Knex.Config;
    knex?: Knex<any, any[]>;
    storageKnexOptions?: StorageKnexOptions;
    storageProvider?: StorageProvider;
    storageManager?: WalletStorageManager;
    servicesOptions?: WalletServicesOptions;
    services?: Services;
    monitor?: Monitor;
}
export declare class MonitorDaemon {
    args: MonitorDaemonSetup;
    noRunTasks?: boolean | undefined;
    setup?: MonitorDaemonSetup;
    doneListening?: Promise<void>;
    doneTasks?: Promise<void>;
    stopDaemon: boolean;
    constructor(args: MonitorDaemonSetup, noRunTasks?: boolean | undefined);
    createSetup(): Promise<void>;
    start(): Promise<void>;
    stop(): Promise<void>;
    destroy(): Promise<void>;
    runDaemon(): Promise<void>;
}
//# sourceMappingURL=MonitorDaemon.d.ts.map