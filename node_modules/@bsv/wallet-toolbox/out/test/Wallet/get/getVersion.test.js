"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const TestUtilsWalletStorage_1 = require("../../utils/TestUtilsWalletStorage");
describe('Wallet getVersion Tests', () => {
    jest.setTimeout(99999999);
    const env = TestUtilsWalletStorage_1._tu.getEnv('test');
    const ctxs = [];
    beforeAll(async () => {
        if (env.runMySQL)
            ctxs.push(await TestUtilsWalletStorage_1._tu.createLegacyWalletMySQLCopy('getVersionTests'));
        ctxs.push(await TestUtilsWalletStorage_1._tu.createLegacyWalletSQLiteCopy('getVersionTests'));
    });
    afterAll(async () => {
        for (const ctx of ctxs) {
            await ctx.storage.destroy();
        }
    });
    test('should return the correct wallet version', async () => {
        for (const { wallet } of ctxs) {
            const result = await wallet.getVersion({});
            expect(result).toEqual({ version: 'wallet-brc100-1.0.0' });
        }
    });
});
//# sourceMappingURL=getVersion.test.js.map