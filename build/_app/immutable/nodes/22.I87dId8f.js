const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["../chunks/Dt8Mewlk.js","../chunks/Cdn01nKd.js"])))=>i.map(i=>d[i]);
import{_ as __vitePreload}from"../chunks/C1FmrZbK.js";import{S as SvelteComponent,i as init,s as safe_not_equal,n as noop,d as detach,w as destroy_each,r as run_all,b as insert_hydration,c as append_hydration,o as listen,p as attr,y as head_selector,h as claim_space,e as claim_element,f as children,q as get_svelte_dataset,k as space,j as element,v as onMount,a as set_data,g as claim_text,t as text}from"../chunks/BOFvEgh9.js";import{e as ensure_array_like}from"../chunks/D6YF6ztN.js";import"../chunks/IHki7fMi.js";function get_each_context(a,e,t){const l=a.slice();return l[10]=e[t],l}function create_if_block_1(a){let e,t,l="‚úÖ Wallet Connected",c,o,n,s="Type:",_,u=a[1].walletType+"",g,B,b,w,I="Public Key:",E,f=a[1].publicKey+"",$;return{c(){e=element("div"),t=element("h3"),t.textContent=l,c=space(),o=element("p"),n=element("strong"),n.textContent=s,_=space(),g=text(u),B=space(),b=element("p"),w=element("strong"),w.textContent=I,E=space(),$=text(f),this.h()},l(y){e=claim_element(y,"DIV",{class:!0});var r=children(e);t=claim_element(r,"H3",{class:!0,"data-svelte-h":!0}),get_svelte_dataset(t)!=="svelte-1ykkdt7"&&(t.textContent=l),c=claim_space(r),o=claim_element(r,"P",{});var N=children(o);n=claim_element(N,"STRONG",{"data-svelte-h":!0}),get_svelte_dataset(n)!=="svelte-1y9dw9w"&&(n.textContent=s),_=claim_space(N),g=claim_text(N,u),N.forEach(detach),B=claim_space(r),b=claim_element(r,"P",{});var C=children(b);w=claim_element(C,"STRONG",{"data-svelte-h":!0}),get_svelte_dataset(w)!=="svelte-1w5qmsi"&&(w.textContent=I),E=claim_space(C),$=claim_text(C,f),C.forEach(detach),r.forEach(detach),this.h()},h(){attr(t,"class","svelte-1f1r37d"),attr(e,"class","wallet-info svelte-1f1r37d")},m(y,r){insert_hydration(y,e,r),append_hydration(e,t),append_hydration(e,c),append_hydration(e,o),append_hydration(o,n),append_hydration(o,_),append_hydration(o,g),append_hydration(e,B),append_hydration(e,b),append_hydration(b,w),append_hydration(b,E),append_hydration(b,$)},p(y,r){r&2&&u!==(u=y[1].walletType+"")&&set_data(g,u),r&2&&f!==(f=y[1].publicKey+"")&&set_data($,f)},d(y){y&&detach(e)}}}function create_if_block(a){let e,t,l="‚ùå Error",c,o,n;return{c(){e=element("div"),t=element("h3"),t.textContent=l,c=space(),o=element("p"),n=text(a[2]),this.h()},l(s){e=claim_element(s,"DIV",{class:!0});var _=children(e);t=claim_element(_,"H3",{class:!0,"data-svelte-h":!0}),get_svelte_dataset(t)!=="svelte-y9efok"&&(t.textContent=l),c=claim_space(_),o=claim_element(_,"P",{});var u=children(o);n=claim_text(u,a[2]),u.forEach(detach),_.forEach(detach),this.h()},h(){attr(t,"class","svelte-1f1r37d"),attr(e,"class","error svelte-1f1r37d")},m(s,_){insert_hydration(s,e,_),append_hydration(e,t),append_hydration(e,c),append_hydration(e,o),append_hydration(o,n)},p(s,_){_&4&&set_data(n,s[2])},d(s){s&&detach(e)}}}function create_each_block(a){let e,t=a[10]+"",l;return{c(){e=element("div"),l=text(t),this.h()},l(c){e=claim_element(c,"DIV",{class:!0});var o=children(e);l=claim_text(o,t),o.forEach(detach),this.h()},h(){attr(e,"class","log-entry svelte-1f1r37d")},m(c,o){insert_hydration(c,e,o),append_hydration(e,l)},p(c,o){o&1&&t!==(t=c[10]+"")&&set_data(l,t)},d(c){c&&detach(e)}}}function create_fragment(a){let e,t,l,c="üß™ Wallet Connection Test",o,n,s,_="üîç Available Tests",u,g,B="Refresh Wallet Detection",b,w,I="Test Basic Connection",E,f,$="Test Old Wallet Service",y,r,N="Test BSV SDK Service",C,L,H="Check Browser Extensions",P,x,F="Try Manual Connection",A,K,O,k,S,G="üìù Debug Logs",U,D,q,M,J='<h3 class="svelte-1f1r37d">üìã Instructions</h3> <ol class="svelte-1f1r37d"><li class="svelte-1f1r37d">Make sure MetaNet Desktop wallet is installed and running</li> <li class="svelte-1f1r37d">Click &quot;Refresh Wallet Detection&quot; to scan for wallets</li> <li class="svelte-1f1r37d">If a wallet is found, click &quot;Test Basic Connection&quot;</li> <li class="svelte-1f1r37d">Check the debug logs for detailed information</li></ol>',j,Q,m=a[1]&&create_if_block_1(a),v=a[2]&&create_if_block(a),W=ensure_array_like(a[0]),h=[];for(let d=0;d<W.length;d+=1)h[d]=create_each_block(get_each_context(a,W,d));return{c(){e=space(),t=element("div"),l=element("h1"),l.textContent=c,o=space(),n=element("div"),s=element("h2"),s.textContent=_,u=space(),g=element("button"),g.textContent=B,b=space(),w=element("button"),w.textContent=I,E=space(),f=element("button"),f.textContent=$,y=space(),r=element("button"),r.textContent=N,C=space(),L=element("button"),L.textContent=H,P=space(),x=element("button"),x.textContent=F,A=space(),m&&m.c(),K=space(),v&&v.c(),O=space(),k=element("div"),S=element("h3"),S.textContent=G,U=space(),D=element("div");for(let d=0;d<h.length;d+=1)h[d].c();q=space(),M=element("div"),M.innerHTML=J,this.h()},l(d){head_selector("svelte-1rjt8xx",document.head).forEach(detach),e=claim_space(d),t=claim_element(d,"DIV",{class:!0});var i=children(t);l=claim_element(i,"H1",{class:!0,"data-svelte-h":!0}),get_svelte_dataset(l)!=="svelte-1nfoayp"&&(l.textContent=c),o=claim_space(i),n=claim_element(i,"DIV",{class:!0});var p=children(n);s=claim_element(p,"H2",{class:!0,"data-svelte-h":!0}),get_svelte_dataset(s)!=="svelte-3bblwu"&&(s.textContent=_),u=claim_space(p),g=claim_element(p,"BUTTON",{class:!0,"data-svelte-h":!0}),get_svelte_dataset(g)!=="svelte-nyhyba"&&(g.textContent=B),b=claim_space(p),w=claim_element(p,"BUTTON",{class:!0,"data-svelte-h":!0}),get_svelte_dataset(w)!=="svelte-19fusoi"&&(w.textContent=I),E=claim_space(p),f=claim_element(p,"BUTTON",{class:!0,"data-svelte-h":!0}),get_svelte_dataset(f)!=="svelte-104diwj"&&(f.textContent=$),y=claim_space(p),r=claim_element(p,"BUTTON",{class:!0,"data-svelte-h":!0}),get_svelte_dataset(r)!=="svelte-bsp975"&&(r.textContent=N),C=claim_space(p),L=claim_element(p,"BUTTON",{class:!0,"data-svelte-h":!0}),get_svelte_dataset(L)!=="svelte-kachng"&&(L.textContent=H),P=claim_space(p),x=claim_element(p,"BUTTON",{class:!0,"data-svelte-h":!0}),get_svelte_dataset(x)!=="svelte-19n6lko"&&(x.textContent=F),p.forEach(detach),A=claim_space(i),m&&m.l(i),K=claim_space(i),v&&v.l(i),O=claim_space(i),k=claim_element(i,"DIV",{class:!0});var V=children(k);S=claim_element(V,"H3",{class:!0,"data-svelte-h":!0}),get_svelte_dataset(S)!=="svelte-rosps6"&&(S.textContent=G),U=claim_space(V),D=claim_element(V,"DIV",{class:!0});var z=children(D);for(let R=0;R<h.length;R+=1)h[R].l(z);z.forEach(detach),V.forEach(detach),q=claim_space(i),M=claim_element(i,"DIV",{class:!0,"data-svelte-h":!0}),get_svelte_dataset(M)!=="svelte-xq04do"&&(M.innerHTML=J),i.forEach(detach),this.h()},h(){document.title="Wallet Test - Gitdata",attr(l,"class","svelte-1f1r37d"),attr(s,"class","svelte-1f1r37d"),attr(g,"class","test-btn svelte-1f1r37d"),attr(w,"class","test-btn svelte-1f1r37d"),attr(f,"class","test-btn svelte-1f1r37d"),attr(r,"class","test-btn svelte-1f1r37d"),attr(L,"class","test-btn svelte-1f1r37d"),attr(x,"class","test-btn svelte-1f1r37d"),attr(n,"class","test-section svelte-1f1r37d"),attr(S,"class","svelte-1f1r37d"),attr(D,"class","log-container svelte-1f1r37d"),attr(k,"class","logs svelte-1f1r37d"),attr(M,"class","instructions svelte-1f1r37d"),attr(t,"class","container svelte-1f1r37d")},m(d,T){insert_hydration(d,e,T),insert_hydration(d,t,T),append_hydration(t,l),append_hydration(t,o),append_hydration(t,n),append_hydration(n,s),append_hydration(n,u),append_hydration(n,g),append_hydration(n,b),append_hydration(n,w),append_hydration(n,E),append_hydration(n,f),append_hydration(n,y),append_hydration(n,r),append_hydration(n,C),append_hydration(n,L),append_hydration(n,P),append_hydration(n,x),append_hydration(t,A),m&&m.m(t,null),append_hydration(t,K),v&&v.m(t,null),append_hydration(t,O),append_hydration(t,k),append_hydration(k,S),append_hydration(k,U),append_hydration(k,D);for(let i=0;i<h.length;i+=1)h[i]&&h[i].m(D,null);append_hydration(t,q),append_hydration(t,M),j||(Q=[listen(g,"click",a[3]),listen(w,"click",a[4]),listen(f,"click",a[5]),listen(r,"click",a[6]),listen(L,"click",a[7]),listen(x,"click",a[8])],j=!0)},p(d,[T]){if(d[1]?m?m.p(d,T):(m=create_if_block_1(d),m.c(),m.m(t,K)):m&&(m.d(1),m=null),d[2]?v?v.p(d,T):(v=create_if_block(d),v.c(),v.m(t,O)):v&&(v.d(1),v=null),T&1){W=ensure_array_like(d[0]);let i;for(i=0;i<W.length;i+=1){const p=get_each_context(d,W,i);h[i]?h[i].p(p,T):(h[i]=create_each_block(p),h[i].c(),h[i].m(D,null))}for(;i<h.length;i+=1)h[i].d(1);h.length=W.length}},i:noop,o:noop,d(d){d&&(detach(e),detach(t)),m&&m.d(),v&&v.d(),destroy_each(h,d),j=!1,run_all(Q)}}}function instance($$self,$$props,$$invalidate){let logs=[],walletInfo=null,error=null;function addLog(a){logs.push(`${new Date().toLocaleTimeString()}: ${a}`),$$invalidate(0,logs),console.log(a)}onMount(()=>{addLog("üéØ Debug page loaded"),checkForWallets()});function checkForWallets(){var t,l,c;if(addLog("üîç Checking for wallets..."),typeof window>"u"){addLog("‚ùå Window object not available");return}const a=[{name:"window.bsv?.wallet",value:(t=window.bsv)==null?void 0:t.wallet},{name:"window.wallet",value:window.wallet},{name:"window.metanet",value:window.metanet},{name:"window.metaNet",value:window.metaNet},{name:"window.MetaNet",value:window.MetaNet},{name:"window.handcash?.wallet",value:(l=window.handcash)==null?void 0:l.wallet},{name:"window.yours?.wallet",value:(c=window.yours)==null?void 0:c.wallet}];let e=!1;if(a.forEach(o=>{o.value?(addLog(`‚úÖ Found: ${o.name}`),e=!0):addLog(`‚ùå Not found: ${o.name}`)}),!e){addLog("‚ùå No wallets found");const o=Object.keys(window).sort();addLog(`üîç Total window properties: ${o.length}`);const n=o.filter(s=>s.toLowerCase().includes("wallet")||s.toLowerCase().includes("metanet")||s.toLowerCase().includes("meta")||s.toLowerCase().includes("bsv")||s.toLowerCase().includes("bitcoin")||s.toLowerCase().includes("handcash")||s.toLowerCase().includes("yours")||s.toLowerCase().includes("chrome")||s.toLowerCase().includes("extension"));n.length>0?(addLog(`üîç Found potential wallet properties: ${n.join(", ")}`),n.forEach(s=>{const _=window[s];if(_&&typeof _=="object"){const u=Object.keys(_);addLog(`üìã ${s} has methods: ${u.slice(0,5).join(", ")}${u.length>5?"...":""}`)}})):addLog("üîç No potential wallet properties found"),addLog("üîç Checking for common wallet events...");try{window.dispatchEvent(new CustomEvent("wallet-detect")),window.dispatchEvent(new CustomEvent("metanet-detect")),addLog("üì° Dispatched wallet detection events")}catch(s){addLog(`‚ö†Ô∏è Event dispatch error: ${s.message}`)}}}async function testBasicConnection(){var a;addLog("üß™ Testing basic wallet connection..."),$$invalidate(2,error=null);try{let e=null;if(window.metanet)e=window.metanet,addLog("‚úÖ Using window.metanet");else if(window.metaNet)e=window.metaNet,addLog("‚úÖ Using window.metaNet");else if(window.MetaNet)e=window.MetaNet,addLog("‚úÖ Using window.MetaNet");else if((a=window.bsv)!=null&&a.wallet)e=window.bsv.wallet,addLog("‚úÖ Using window.bsv.wallet");else if(window.wallet)e=window.wallet,addLog("‚úÖ Using window.wallet");else throw new Error("No wallet found");if(addLog("üîÑ Checking wallet availability..."),e.isAvailable){const l=await e.isAvailable();if(addLog(`üìä Wallet available: ${l}`),!l)throw new Error("Wallet is not available")}else addLog("‚ö†Ô∏è Wallet does not have isAvailable method");addLog("üîÑ Getting public key...");const t=await e.getPublicKey({identityKey:!0});addLog(`‚úÖ Got public key: ${t.publicKey.slice(0,10)}...`),$$invalidate(1,walletInfo={publicKey:t.publicKey,walletType:"MetaNet Desktop"})}catch(e){$$invalidate(2,error=e.message),addLog(`‚ùå Error: ${e.message}`)}}async function testWalletService(){var a;addLog("üß™ Testing old wallet service...");try{const{walletService:e}=await __vitePreload(async()=>{const{walletService:l}=await import("../chunks/BR2BQ31v.js");return{walletService:l}},[],import.meta.url),t=await e.connect();addLog(`‚úÖ Old wallet service connected: ${(a=t.publicKey)==null?void 0:a.slice(0,10)}...`)}catch(e){addLog(`‚ùå Old wallet service error: ${e.message}`)}}async function testBSVWalletService(){var a;addLog("üß™ Testing BSV SDK wallet service...");try{const{bsvWalletService:e}=await __vitePreload(async()=>{const{bsvWalletService:l}=await import("../chunks/Dt8Mewlk.js");return{bsvWalletService:l}},__vite__mapDeps([0,1]),import.meta.url),t=await e.connect();addLog(`‚úÖ BSV SDK wallet connected: ${(a=t.publicKey)==null?void 0:a.slice(0,10)}...`),$$invalidate(1,walletInfo={publicKey:t.publicKey,walletType:"MetaNet Desktop (BSV SDK)"})}catch(e){addLog(`‚ùå BSV SDK wallet error: ${e.message}`)}}async function checkBrowserExtensions(){addLog("üîç Checking for browser extensions..."),typeof chrome<"u"?(addLog("‚úÖ Chrome extension API available"),chrome.runtime&&addLog("‚úÖ Chrome runtime available")):addLog("‚ùå Chrome extension API not available");const extensionChecks=["window.chrome","window.browser","window.msCrypto","window.ethereum","navigator.credentials","navigator.wallet"];extensionChecks.forEach(check=>{const value=eval(check);addLog(value?`‚úÖ Found: ${check}`:`‚ùå Not found: ${check}`)})}function tryManualConnection(){addLog("üîß Attempting manual connection methods..."),[()=>window.open("metanet://connect","_blank"),()=>window.location.href="metanet://connect",()=>{const e=new CustomEvent("metanet-connect-request");window.dispatchEvent(e)},()=>{window.postMessage({type:"METANET_CONNECT_REQUEST"},"*")}].forEach((e,t)=>{try{e(),addLog(`üì° Attempted connection method ${t+1}`)}catch(l){addLog(`‚ùå Connection method ${t+1} failed: ${l.message}`)}}),window.addEventListener("message",e=>{e.data&&e.data.type&&e.data.type.includes("METANET")&&addLog(`üì® Received message: ${JSON.stringify(e.data)}`)}),addLog("üëÇ Listening for wallet responses...")}return[logs,walletInfo,error,checkForWallets,testBasicConnection,testWalletService,testBSVWalletService,checkBrowserExtensions,tryManualConnection]}class Page extends SvelteComponent{constructor(e){super(),init(this,e,instance,create_fragment,safe_not_equal,{})}}export{Page as component};
