version: '3.8'

services:
  # PostgreSQL Database for Development
  postgres:
    image: postgres:15-alpine
    container_name: gitdata-postgres-dev
    environment:
      POSTGRES_DB: overlay
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./src/db/postgresql-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./src/db/schema-d08-realtime-packets.sql:/docker-entrypoint-initdb.d/02-d08-schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d overlay"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gitdata-dev-network

  # Redis Cache for Development
  redis:
    image: redis:7-alpine
    container_name: gitdata-redis-dev
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - gitdata-dev-network

  # Development Application with hot reload
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: gitdata-app-dev
    environment:
      NODE_ENV: development
      PORT: 8788

      # Database Configuration
      PG_HOST: postgres
      PG_PORT: 5432
      PG_DATABASE: overlay
      PG_USER: postgres
      PG_PASSWORD: password

      # Redis Configuration
      REDIS_URL: redis://redis:6379

      # Application Configuration
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:5173,http://localhost:8080

      # Development specific
      LOG_LEVEL: debug
      USE_REDIS_BUNDLES: "true"
    ports:
      - "8788:8788"
      - "9229:9229" # Node.js debugging port
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - app_dev_data:/app/data
      - app_dev_logs:/app/logs
    command: npm run dev
    networks:
      - gitdata-dev-network

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: gitdata-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gitdata.dev
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "8080:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    networks:
      - gitdata-dev-network

  # Redis Commander for cache management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: gitdata-redis-commander-dev
    environment:
      REDIS_HOSTS: local:redis:6379
      HTTP_USER: admin
      HTTP_PASSWORD: admin
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - gitdata-dev-network

# Named volumes for development data persistence
volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  app_dev_data:
    driver: local
  app_dev_logs:
    driver: local
  pgadmin_dev_data:
    driver: local

# Network for development service communication
networks:
  gitdata-dev-network:
    driver: bridge